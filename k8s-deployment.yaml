apiVersion: apps/v1
kind: Deployment
metadata:
  name: onyx-backend
  labels:
    app: onyx-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: onyx-backend
  template:
    metadata:
      labels:
        app: onyx-backend
    spec:
      containers:
      - name: onyx-backend
        image: gcr.io/PROJECT_ID/onyx-backend:latest
        ports:
        - containerPort: 8080
        env:
        - name: FILE_STORE_TYPE
          value: "gcp"
        - name: GCP_PROJECT_ID
          value: "PROJECT_ID"
        - name: GCP_BUCKET_NAME
          value: "onyx-files-PROJECT_ID"
        - name: POSTGRES_HOST
          value: "postgres-service"
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DB
          value: "onyx"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: onyx-backend-service
spec:
  selector:
    app: onyx-backend
  ports:
  - port: 80
    targetPort: 8080
  type: LoadBalancer
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
type: Opaque
data:
  password: cGFzc3dvcmQ=  # base64 encoded "password"
